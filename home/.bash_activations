#!/bin/bash

if [ -f ~/.rvm/scripts/rvm ]; then
  . ~/.rvm/scripts/rvm
fi

# FZF include
if command_exists fzf ; then
  [ -f ~/.fzf.bash ] && source ~/.fzf.bash
fi

if [ -f /etc/bash_completion ]; then
  . /etc/bash_completion
fi

if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

if command_exists brew ; then
  if [ -f "$(brew --prefix nvm)/nvm.sh" ]; then
    source "$(brew --prefix nvm)/nvm.sh"
  fi

  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
fi

if [ -f ~/.nvm/nvm.sh ]; then
  export NVM_DIR="$HOME/.nvm"
  export NODE_ENV=development
  . ~/.nvm/nvm.sh

  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

if command_exists grunt ; then
  eval "$(grunt --completion=bash)"
fi

if command_exists rbenv ; then
  eval "$(rbenv init -)"
fi

if command_exists powerline-shell ; then 
  function _update_ps1() {
      PS1="$(powerline-shell $?)"
  }

  if [ "$TERM" != "linux" ]; then
      PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
  fi
fi

if [ -f "$HOME/.homesick/" ] ; then
  source "$HOME/.homesick/repos/homeshick/homeshick.sh"
  source "$HOME/.homesick/repos/homeshick/completions/homeshick-completion.bash"
fi

if [ -d "$HOME/.nodenv/" ] ; then
  export PATH="$HOME/.nodenv/bin:$PATH"
  eval "$(nodenv init -)"
fi

if command_exists direnv ; then
  eval "$(direnv hook bash)"
fi

if [ -f '/home/linuxbrew/.linuxbrew/etc/profile.d/z.sh' ] ; then
  source /home/linuxbrew/.linuxbrew/etc/profile.d/z.sh
fi

if [ -f "$HOME/.bin/tmuxinator.bash" ] ; then
  source ~/.bin/tmuxinator.bash ;
fi
